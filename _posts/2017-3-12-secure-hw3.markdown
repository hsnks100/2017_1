---
layout: post
tags: 
title2: 컴퓨터보안 bezout's identity 와 확장 유클리드
comments: true
---


# 유클리드 호제법

```
gcd(a,b) = 

a = b*q1 + r1
b = r1*q2 + r2
r1 = r2*q3 + r3

```

기본적인 유클리드 호제법은 위와 같이 나타내면서 구한다. 구하면서 나머지가 없을 때의 값이 gcd(a, b) 가 된다.  


# bezout's identity

정수 a, b 의 최대공약수(Greatest Common Divisor)를 gcd(a,b)와 나타낼 때, 확장된 유클리드 호제법을 이용하여, ax + by = gcd(a,b)의 해가 되는 정수 a, b 짝을 찾아낼 수 있다.  

이 식이 바로 Bezout's identity 라고 한다.  

ax+by = c 형태에서 최소의 c 가 바로 gcd(a, b) 가 된다.

# 확장 유클리드 호제법

위에 소개된 식에서   

이걸 ax + by의 꼴로 변형하기 위해, 나머지를 뺀 나머지 항들을 이항해서 다음과 같은 식으로 만든다.

```
r1 = a - b*q1 
r2 = b - r1*q2
r3 = r1 - r2*q3
```

만약 r3 가 gcd(a,b) 라면 r1 와 r2 를 이용해서 ax + by = r3 로 정리할 수 있다.  


# Example

a = 710, b = 68

710x + 68y = gcd(710,68) 이라고 하면, x,y값은 항상 존재 한다. (Bezout's identity)  

우선 gcd(710, 68)을 유클리드 알고리즘으로 푼다.

```
710 = 68 * 10 + 30 
 68 = 30 * 2 + 8
 30 = 8 * 3 + 6
  8 = 6 * 1 + 2
  6 = 2 * 3 + 0

```

gcd(710, 68 ) = 2  

```
30 = a - b*10
 8 = b - 30 * 2 = b - ( a - b*10) * 2 = -2a * 21b
```

이런 식으로 대입해나가면..

```
 6 = 7a -73b
 2 = -9a + 94b
```


즉, -9a + 94b = gcd(710,68) 의 형태가 된다.    

따라서 정수해 x,y는 (-9, 94)가 된다.  






