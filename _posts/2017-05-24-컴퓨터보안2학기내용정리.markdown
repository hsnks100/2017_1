---
layout: post
tags: 
title2: 컴퓨터보안 기말고사 정리
author: 코딩도사(hsnks100@gmail.com)
comments: true
---

# RSA 

전통적인 암호화는 하나의 키를 썼다. 그래서 sender 와 receiver 가 같은 키를 공유했다.  키 분배 문제가 생긴다. 
공개키 알고리즘은 Discrete log 의 어려움을 이용한다. 

비밀키와 공개키 두가지 개념이 있다. 기본적인 흐름은 다음과 같다.

1. A가  B에게 메세지를 보내기 위해서 B의 공개키로 A 가 메세지를 암호화 해서 보낸다.  
2. 이 메세지를 푸는건 B의 비밀키로만 풀 수 있다.  

신원 확인  

A->B 로 보낼 때, B 가 A 가 진짜로 보내는지 확인을 하기 위해서 필요한 절차  


1. A 는 A의 비밀키로 서명을 한다.  
2. B 는 받은 서명 데이터를 A의 공개키로 풀어본다. A 의 신분을 확인한다.  

1. 신원 확인을 위해서 나는 나의 비밀키로 서명을 한다. 서명한 데이터는 나의 공개키로만 풀 수 있다. 그래서 나의 신분을 상대방들이 확인할 수 있다.  

RSA 의 구체적인 방법은

$$
\text{
먼저 두 소수를 선택한다. p = 17, q = 11 \\ 
n = pq = 18 \\ 
\phi(n) = (p-1)(q-1) = 16 * 10 = 160 \\
gcd(e, 160)\; =\; 1 인 e 를 구한다. e = 7 \\
de = 1 mod 160 인 d 를 구한다. d = 23 \\
공개키는 {7, 187} \\
비밀키는 {23, 17, 11} \\
}

$$

이제 암호화와 복호화를 살펴보면

$$
C = M^e\; mod\; n \\
M = C^d\; mod\; n \\


$$



# Key Management

## public annoucement

## publicly available directory

## public-key autority

## public-key certificates

## Simple Secret Key distribution

## Man-in-the-middle-attack

## Secret Key Distribution with Confidentiality and Authentication

## Hybrid Key Distribution

# Diffie-Hellman Key Exchange

# ElGamal Cryptography

# ECC(Elliptic Curve Cryptography)

## Why ECC?

## Diffie Hellman over ECC

# Message Authentication & Hash Functions

# Message Authentication Codes

# Birthday Attacks

# Classification of Hash Functions

# MAC vs. MIC

# Unkeyed Hash Functions

# Secure Hash Algorithm

# Keyed Hash Functions

# HMAC

# Digital Signatures

# Properties

# Attacks and Forgeries

# Direct Digital Signature

# ElGamal Digital Signature Scheme

# Schnorr Digital Signature Scheme

# Digial Signature Standard

# X.509 Certificates & PKI

# X.509 Certification Service

# Public Key Infstructure


# needham-schroeder protocol
등장 A, B, KDC

A 가 KDC 에게 B랑 통신하고 싶다고 함.
KdC 는 A한테 Ka (A의 비밀키) 로 암호화 해서 Ks, IDb, N1, Ekb[Ks, IDa] 를 보냄.
Ekb[Ks, IDa] 는 A 가 못 품.
이 Ekb[Ks, IDa] 를 A가 B 에게 보냄.
이제 서로 Ks 세션키를 가지게 됨.
B가 A에게 Ks 로 N2 를 암호화 해서 보냄
A는 B에게 f(N2) 을 보내서 서로 확인함.


## 

